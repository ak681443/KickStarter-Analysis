# name_of_query = <actual_query> (no semi colon)

# sample
fetch.continents = select * from asugumar.continent

# authentication 
auth.user = select * from asugumar.token where token = ?
verify.password = select usid from asugumar.users where user_name=? and passwd=?
insert.token = insert into asugumar.token values(?,?)

# explore page
recommend.all_categories = select * from sshi.main_category
recommend.top_projects = select CAST ((MONEY_PLEDGED / GOAL) * 100 AS INT) AS PERCENTAGE, p.*  from dpan.ks_projects p where rownum <= 12
recommend.proj_maincategory = select * from (select CAST ((p.MONEY_PLEDGED / p.GOAL) * 100 AS INT) AS PERCENTAGE, p.name, p.blurb, p.photo, m.category_id as id from sshi.main_category m, sshi.subcategory s, dpan.ks_projects p where m.category_id = ? and m.category_id = s.category_id and s.subcategory_id = p.subcategory_id) where rownum < 7


# project model
get.project = select * from dpan.ks_projects where PROJECT_ID = ?

# location model
get.location = select * from asugumar.ks_locations where LOCATION_ID = ?

# owner model
get.owner = select * from asugumar.ks_creators a join asugumar.ks_users b join a.USER_ID = b.USER_ID where a.OWNER_ID = ? 

# backer model
get.backer = select * from asugumar.ks_backers a join asugumar.ks_users b join a.USER_ID = b.USER_ID where a.BACKER_ID = ? 

# main category model
get.maincategory = select * from sshi.main_category where category_id = ?

# sub category model
get.subcategory = select * from sshi.subcategory where subcategory_id = ?

# money movement
get.moneymovement = select l.latitude, l.longitude, l.slug, l.displayable_name, l1.NO_OF_BACKINGS from KS_LOCATIONS l join (select LOCATION_ID, count(*) as NO_OF_BACKINGS from KS_BACKERS where BACKER_ID  IN (select BACKER_ID from KS_BACKS where PROJECT_ID = ?) group by LOCATION_ID) l1 on l.LOCATION_ID = l1.LOCATION_ID

# collaborative filtering

get.similar.users = 
get.similar.projects = 

# co-location queries lat, lat, long, latrange, country

get.nearby.locations = select * from (select * from asugumar.ks_locations where location_id in (select location_id from (SELECT location_id, 3956 * 2 * ASIN(SQRT(POWER(SIN((? - abs(latitude)) * 3.1415/180.0 / 2), 2) + COS(? * 3.1415/180.0 ) * COS(abs(latitude) * 3.1415/180.0) * POWER(SIN((? - longitude) * 3.1415/180.0 / 2), 2) )) as  dist FROM KS_LOCATIONS where latitude between ? and ? and COUNTRY = ?) where dist < 50 order by dist asc)) where rownum < 11
get.nearby.projects = select * from (select * from dpan.ks_projects where location_id in (select * from (select location_id from (SELECT location_id, 3956 * 2 * ASIN(SQRT(POWER(SIN((? - abs(latitude)) * 3.1415/180.0 / 2), 2) + COS(? * 3.1415/180.0 ) * COS(abs(latitude) * 3.1415/180.0) * POWER(SIN((? - longitude) * 3.1415/180.0 / 2), 2) )) as  dist FROM KS_LOCATIONS where latitude between ? and ? and COUNTRY = ?) where dist < 50 order by dist asc) where rownum < 11) and project_id != ?) where rownum < 11
get.nearby.backers = select * from (select * from asugumar.ks_backers where location_id in (select * from (select location_id from (SELECT location_id, 3956 * 2 * ASIN(SQRT(POWER(SIN((? - abs(latitude)) * 3.1415/180.0 / 2), 2) + COS(? * 3.1415/180.0 ) * COS(abs(latitude) * 3.1415/180.0) * POWER(SIN((? - longitude) * 3.1415/180.0 / 2), 2) )) as  dist FROM KS_LOCATIONS where latitude between ? and ? and COUNTRY = ?) where dist < 50 order by dist asc) where rownum < 11) and user_id != ?) where rownum < 11
get.nearby.creators = select * from (select * from asugumar.ks_creators where location_id in (select * from (select location_id from (SELECT location_id, 3956 * 2 * ASIN(SQRT(POWER(SIN((? - abs(latitude)) * 3.1415/180.0 / 2), 2) + COS(? * 3.1415/180.0 ) * COS(abs(latitude) * 3.1415/180.0) * POWER(SIN((? - longitude) * 3.1415/180.0 / 2), 2) )) as  dist FROM KS_LOCATIONS where latitude between ? and ? and COUNTRY = ?) where dist < 50 order by dist asc) where rownum < 11) and user_id !=?) where rownum < 11